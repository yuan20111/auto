.issues-filters
  .pull-left.append-right-20
    %ul.nav.nav-pills.nav-compact
      %li{class: ("active" if params[:state] == 'opened')}
        = link_to page_filter_path(state: 'opened') do
          %i.fa.fa-exclamation-circle
          Open
      %li{class: ("active" if params[:state] == 'closed')}
        = link_to page_filter_path(state: 'closed') do
          %i.fa.fa-check-circle
          Closed
      %li{class: ("active" if params[:state] == 'all')}
        = link_to page_filter_path(state: 'all') do
          %i.fa.fa-compass
          All

  .dropdown.inline.assignee-filter
    %a.dropdown-toggle.btn{href: '#', "data-toggle" => "dropdown"}
      %i.fa.fa-user
      %span.light assignee:
      - if @assignee.present?
        %strong= @assignee.name
      - elsif params[:assignee_id] == "0"
        Unassigned
      - else
        Any
      %b.caret
    %ul.dropdown-menu
      %li
        = link_to page_filter_path(assignee_id: nil) do
          Any
        = link_to page_filter_path(assignee_id: 0) do
          Unassigned
      - @assignees.sort_by(&:name).each do |user|
        %li
          = link_to page_filter_path(assignee_id: user.id) do
            = image_tag avatar_icon(user.email), class: "avatar s16", alt: ''
            = user.name

  .dropdown.inline.prepend-left-10.author-filter
    %a.dropdown-toggle.btn{href: '#', "data-toggle" => "dropdown"}
      %i.fa.fa-user
      %span.light author:
      - if @author.present?
        %strong= @author.name
      - elsif params[:author_id] == "0"
        Unassigned
      - else
        Any
      %b.caret
    %ul.dropdown-menu
      %li
        = link_to page_filter_path(author_id: nil) do
          Any
        = link_to page_filter_path(author_id: 0) do
          Unassigned
      - @authors.sort_by(&:name).each do |user|
        %li
          = link_to page_filter_path(author_id: user.id) do
            = image_tag avatar_icon(user.email), class: "avatar s16", alt: ''
            = user.name

  .dropdown.inline.prepend-left-10.milestone-filter
    %a.dropdown-toggle.btn{href: '#', "data-toggle" => "dropdown"}
      %i.fa.fa-clock-o
      %span.light milestone:
      - if @milestone.present?
        %strong= @milestone.title
      - elsif params[:milestone_id] == "0"
        None (backlog)
      - else
        Any
      %b.caret
    %ul.dropdown-menu
      %li
        = link_to page_filter_path(milestone_id: nil) do
          Any
        = link_to page_filter_path(milestone_id: 0) do
          None (backlog)
      - @milestones.each do |milestone|
        %li
          = link_to page_filter_path(milestone_id: milestone.id) do
            %strong= milestone.title
            %small.light= milestone.expires_at

  - if @project
    .dropdown.inline.prepend-left-10.labels-filter
      %a.dropdown-toggle.btn{href: '#', "data-toggle" => "dropdown"}
        %i.fa.fa-tags
        %span.light label:
        - if params[:label_name].present?
          %strong= params[:label_name]
        - else
          Any
        %b.caret
      %ul.dropdown-menu
        %li
          = link_to page_filter_path(label_name: nil) do
            Any
        - if @project.labels.any?
          - @project.labels.each do |label|
            %li
              = link_to page_filter_path(label_name: label.name) do
                = render_colored_label(label)
        - else
          %li
            = link_to generate_project_labels_path(@project, redirect: request.original_url), method: :post do
              %i.fa.fa-plus-circle
              Create default labels

  .pull-right
    = render 'shared/sort_dropdown'
