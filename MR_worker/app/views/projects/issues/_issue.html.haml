%li{ id: dom_id(issue), class: issue_css_classes(issue), url: project_issue_path(issue.project, issue) }
  - if controller.controller_name == 'issues'
    .issue-check
      = check_box_tag dom_id(issue,"selected"), nil, false, 'data-id' => issue.id, class: "selected_issue", disabled: !can?(current_user, :modify_issue, issue)

  .issue-title
    %span.str-truncated
      = link_to_gfm issue.title, project_issue_path(issue.project, issue), class: "row_title"
    - if issue.closed?
      %small.pull-right
        CLOSED

  .issue-info
    %span.light= "##{issue.iid}"
    - if issue.assignee
      assigned to #{link_to_member(@project, issue.assignee)}
    - if issue.votes_count > 0
      = render 'votes/votes_inline', votable: issue
    - if issue.notes.any?
      %span
        %i.fa.fa-comments
        = issue.notes.count
    - if issue.milestone
      %span
        %i.fa.fa-clock-o
        = issue.milestone.title
    - if issue.tasks?
      %span.task-status
        = issue.task_status

    .pull-right.issue-updated-at
      %small updated #{time_ago_with_tooltip(issue.updated_at, 'bottom', 'issue_update_ago')}

    .issue-labels
      - issue.labels.each do |label|
        = link_to project_issues_path(issue.project, label_name: label.name) do
          = render_colored_label(label)

  .issue-actions
    - if can? current_user, :modify_issue, issue
      - if issue.closed?
        = link_to 'Reopen', project_issue_path(issue.project, issue, issue: {state_event: :reopen }, status_only: true), method: :put,  class: "btn btn-small btn-grouped reopen_issue btn-reopen", remote: true
      - else
        = link_to 'Close', project_issue_path(issue.project, issue, issue: {state_event: :close }, status_only: true), method: :put, class: "btn btn-small btn-grouped close_issue btn-close", remote: true
      = link_to edit_project_issue_path(issue.project, issue), class: "btn btn-small edit-issue-link btn-grouped" do
        %i.fa.fa-pencil-square-o
        Edit


